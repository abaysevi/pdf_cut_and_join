{"ast":null,"code":"var _jsxFileName = \"/home/abay/task_pdf_app/frontend_react/pdf-app/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\n// src/components/FileUpload.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleUpload = async () => {\n    try {\n      // Create a FormData object to send the file to the server\n      const formData = new FormData();\n      formData.append('pdfFile', file);\n\n      // Send the file to the /upload endpoint on the server\n      const response = await fetch('http://localhost:3001/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        // Extract the file path from the response\n        const {\n          filePath\n        } = await response.json();\n\n        // Navigate to the processing page and pass the file path as a query parameter\n        navigate(`/file-processing?filePath=${encodeURIComponent(filePath)}`);\n      } else {\n        console.error('File upload failed');\n      }\n    } catch (error) {\n      console.error('Error during file upload:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"File Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"a8hUmGYItl0fyIx8Tvn6au4ZieE=\", false, function () {\n  return [useNavigate];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","navigate","handleFileChange","e","selectedFile","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","filePath","json","encodeURIComponent","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/home/abay/task_pdf_app/frontend_react/pdf-app/src/components/FileUpload.js"],"sourcesContent":["// src/components/FileUpload.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst FileUpload = () => {\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleUpload = async () => {\n    try {\n      // Create a FormData object to send the file to the server\n      const formData = new FormData();\n      formData.append('pdfFile', file);\n\n      // Send the file to the /upload endpoint on the server\n      const response = await fetch('http://localhost:3001/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        // Extract the file path from the response\n        const { filePath } = await response.json();\n\n        // Navigate to the processing page and pass the file path as a query parameter\n        navigate(`/file-processing?filePath=${encodeURIComponent(filePath)}`);\n      } else {\n        console.error('File upload failed');\n      }\n    } catch (error) {\n      console.error('Error during file upload:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>File Upload</h2>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload}>Upload</button>\n    </div>\n  );\n};\n\nexport default FileUpload;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,YAAY,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IACtCN,OAAO,CAACI,YAAY,CAAC;EACvB,CAAC;EAED,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAEX,IAAI,CAAC;;MAEhC;MACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;QACf;QACA,MAAM;UAAEC;QAAS,CAAC,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;;QAE1C;QACAhB,QAAQ,CAAE,6BAA4BiB,kBAAkB,CAACF,QAAQ,CAAE,EAAC,CAAC;MACvE,CAAC,MAAM;QACLG,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC;MACrC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpB7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEzB;IAAiB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjD7B,OAAA;MAAQgC,OAAO,EAAErB,YAAa;MAAAc,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA1CID,UAAU;EAAA,QAEGH,WAAW;AAAA;AAAAmC,EAAA,GAFxBhC,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}